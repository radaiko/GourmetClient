<?xml version="1.0" encoding="utf-8" ?>
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml">

    <!--
      ────────────────────────────────────────────────────────────────────────────
      Material 3 (Android “latest design”) – Token Palette
      Baseline values approximating M3; you can tweak to your brand.
      Light/Dark handled via AppThemeBinding so controls auto-adapt.
      ────────────────────────────────────────────────────────────────────────────
    -->

    <!-- LIGHT -->
    <Color x:Key="M3.Primary.Light">#6750A4</Color>
    <Color x:Key="M3.OnPrimary.Light">#FFFFFF</Color>
    <Color x:Key="M3.PrimaryContainer.Light">#EADDFF</Color>
    <Color x:Key="M3.OnPrimaryContainer.Light">#21005D</Color>

    <Color x:Key="M3.Secondary.Light">#625B71</Color>
    <Color x:Key="M3.OnSecondary.Light">#FFFFFF</Color>
    <Color x:Key="M3.SecondaryContainer.Light">#E8DEF8</Color>
    <Color x:Key="M3.OnSecondaryContainer.Light">#1D192B</Color>

    <Color x:Key="M3.Tertiary.Light">#7D5260</Color>
    <Color x:Key="M3.OnTertiary.Light">#FFFFFF</Color>
    <Color x:Key="M3.TertiaryContainer.Light">#FFD8E4</Color>
    <Color x:Key="M3.OnTertiaryContainer.Light">#31111D</Color>

    <Color x:Key="M3.Surface.Light">#FFFBFE</Color>
    <Color x:Key="M3.SurfaceContainer.Low.Light">#F7F2FA</Color>
    <Color x:Key="M3.SurfaceContainer.High.Light">#ECE6F0</Color>
    <Color x:Key="M3.SurfaceVariant.Light">#E7E0EC</Color>
    <Color x:Key="M3.OnSurface.Light">#1C1B1F</Color>
    <Color x:Key="M3.OnSurfaceVariant.Light">#49454F</Color>
    <Color x:Key="M3.Outline.Light">#79747E</Color>
    <Color x:Key="M3.OutlineVariant.Light">#CAC4D0</Color>

    <Color x:Key="M3.Error.Light">#B3261E</Color>
    <Color x:Key="M3.OnError.Light">#FFFFFF</Color>
    <Color x:Key="M3.ErrorContainer.Light">#F9DEDC</Color>
    <Color x:Key="M3.OnErrorContainer.Light">#410E0B</Color>

    <!-- DARK -->
    <Color x:Key="M3.Primary.Dark">#D0BCFF</Color>
    <Color x:Key="M3.OnPrimary.Dark">#381E72</Color>
    <Color x:Key="M3.PrimaryContainer.Dark">#4F378B</Color>
    <Color x:Key="M3.OnPrimaryContainer.Dark">#EADDFF</Color>

    <Color x:Key="M3.Secondary.Dark">#CCC2DC</Color>
    <Color x:Key="M3.OnSecondary.Dark">#332D41</Color>
    <Color x:Key="M3.SecondaryContainer.Dark">#4A4458</Color>
    <Color x:Key="M3.OnSecondaryContainer.Dark">#E8DEF8</Color>

    <Color x:Key="M3.Tertiary.Dark">#EFB8C8</Color>
    <Color x:Key="M3.OnTertiary.Dark">#492532</Color>
    <Color x:Key="M3.TertiaryContainer.Dark">#633B48</Color>
    <Color x:Key="M3.OnTertiaryContainer.Dark">#FFD8E4</Color>

    <Color x:Key="M3.Surface.Dark">#1C1B1F</Color>
    <Color x:Key="M3.SurfaceContainer.Low.Dark">#211F26</Color>
    <Color x:Key="M3.SurfaceContainer.High.Dark">#2B2930</Color>
    <Color x:Key="M3.SurfaceVariant.Dark">#49454F</Color>
    <Color x:Key="M3.OnSurface.Dark">#E6E1E5</Color>
    <Color x:Key="M3.OnSurfaceVariant.Dark">#CAC4D0</Color>
    <Color x:Key="M3.Outline.Dark">#938F99</Color>
    <Color x:Key="M3.OutlineVariant.Dark">#49454F</Color>

    <Color x:Key="M3.Error.Dark">#F2B8B5</Color>
    <Color x:Key="M3.OnError.Dark">#601410</Color>
    <Color x:Key="M3.ErrorContainer.Dark">#8C1D18</Color>
    <Color x:Key="M3.OnErrorContainer.Dark">#F9DEDC</Color>

    <!-- Cross-theme aliases using AppThemeBinding -->
    <Color x:Key="M3.Primary" Color="{AppThemeBinding Light={StaticResource M3.Primary.Light}, Dark={StaticResource M3.Primary.Dark}}" />
    <Color x:Key="M3.OnPrimary" Color="{AppThemeBinding Light={StaticResource M3.OnPrimary.Light}, Dark={StaticResource M3.OnPrimary.Dark}}" />
    <Color x:Key="M3.PrimaryContainer" Color="{AppThemeBinding Light={StaticResource M3.PrimaryContainer.Light}, Dark={StaticResource M3.PrimaryContainer.Dark}}" />
    <Color x:Key="M3.OnPrimaryContainer" Color="{AppThemeBinding Light={StaticResource M3.OnPrimaryContainer.Light}, Dark={StaticResource M3.OnPrimaryContainer.Dark}}" />

    <Color x:Key="M3.Secondary" Color="{AppThemeBinding Light={StaticResource M3.Secondary.Light}, Dark={StaticResource M3.Secondary.Dark}}" />
    <Color x:Key="M3.OnSecondary" Color="{AppThemeBinding Light={StaticResource M3.OnSecondary.Light}, Dark={StaticResource M3.OnSecondary.Dark}}" />
    <Color x:Key="M3.SecondaryContainer" Color="{AppThemeBinding Light={StaticResource M3.SecondaryContainer.Light}, Dark={StaticResource M3.SecondaryContainer.Dark}}" />
    <Color x:Key="M3.OnSecondaryContainer" Color="{AppThemeBinding Light={StaticResource M3.OnSecondaryContainer.Light}, Dark={StaticResource M3.OnSecondaryContainer.Dark}}" />

    <Color x:Key="M3.Tertiary" Color="{AppThemeBinding Light={StaticResource M3.Tertiary.Light}, Dark={StaticResource M3.Tertiary.Dark}}" />
    <Color x:Key="M3.OnTertiary" Color="{AppThemeBinding Light={StaticResource M3.OnTertiary.Light}, Dark={StaticResource M3.OnTertiary.Dark}}" />
    <Color x:Key="M3.TertiaryContainer" Color="{AppThemeBinding Light={StaticResource M3.TertiaryContainer.Light}, Dark={StaticResource M3.TertiaryContainer.Dark}}" />
    <Color x:Key="M3.OnTertiaryContainer" Color="{AppThemeBinding Light={StaticResource M3.OnTertiaryContainer.Light}, Dark={StaticResource M3.OnTertiaryContainer.Dark}}" />

    <Color x:Key="M3.Surface" Color="{AppThemeBinding Light={StaticResource M3.Surface.Light}, Dark={StaticResource M3.Surface.Dark}}" />
    <Color x:Key="M3.SurfaceContainer.Low" Color="{AppThemeBinding Light={StaticResource M3.SurfaceContainer.Low.Light}, Dark={StaticResource M3.SurfaceContainer.Low.Dark}}" />
    <Color x:Key="M3.SurfaceContainer.High" Color="{AppThemeBinding Light={StaticResource M3.SurfaceContainer.High.Light}, Dark={StaticResource M3.SurfaceContainer.High.Dark}}" />
    <Color x:Key="M3.SurfaceVariant" Color="{AppThemeBinding Light={StaticResource M3.SurfaceVariant.Light}, Dark={StaticResource M3.SurfaceVariant.Dark}}" />
    <Color x:Key="M3.OnSurface" Color="{AppThemeBinding Light={StaticResource M3.OnSurface.Light}, Dark={StaticResource M3.OnSurface.Dark}}" />
    <Color x:Key="M3.OnSurfaceVariant" Color="{AppThemeBinding Light={StaticResource M3.OnSurfaceVariant.Light}, Dark={StaticResource M3.OnSurfaceVariant.Dark}}" />
    <Color x:Key="M3.Outline" Color="{AppThemeBinding Light={StaticResource M3.Outline.Light}, Dark={StaticResource M3.Outline.Dark}}" />
    <Color x:Key="M3.OutlineVariant" Color="{AppThemeBinding Light={StaticResource M3.OutlineVariant.Light}, Dark={StaticResource M3.OutlineVariant.Dark}}" />

    <Color x:Key="M3.Error" Color="{AppThemeBinding Light={StaticResource M3.Error.Light}, Dark={StaticResource M3.Error.Dark}}" />
    <Color x:Key="M3.OnError" Color="{AppThemeBinding Light={StaticResource M3.OnError.Light}, Dark={StaticResource M3.OnError.Dark}}" />
    <Color x:Key="M3.ErrorContainer" Color="{AppThemeBinding Light={StaticResource M3.ErrorContainer.Light}, Dark={StaticResource M3.ErrorContainer.Dark}}" />
    <Color x:Key="M3.OnErrorContainer" Color="{AppThemeBinding Light={StaticResource M3.OnErrorContainer.Light}, Dark={StaticResource M3.OnErrorContainer.Dark}}" />

    <!-- Elevation & shape tokens -->
    <Thickness x:Key="M3.Padding.Button">16,10</Thickness>
    <Thickness x:Key="M3.Padding.TextField">16,12</Thickness>
    <CornerRadius x:Key="M3.Radius.Small">8</CornerRadius>
    <CornerRadius x:Key="M3.Radius.Medium">12</CornerRadius>
    <CornerRadius x:Key="M3.Radius.Large">16</CornerRadius>
    <CornerRadius x:Key="M3.Radius.Full">999</CornerRadius>

    <!-- Typography (adjust to your brand fonts) -->
    <FontFamily x:Key="M3.Font.Sans">Roboto</FontFamily>
    <x:Double x:Key="M3.FontSize.Label">14</x:Double>
    <x:Double x:Key="M3.FontSize.Body">16</x:Double>
    <x:Double x:Key="M3.FontSize.Title">20</x:Double>
    <x:Double x:Key="M3.FontSize.Display">28</x:Double>

    <!--
      ────────────────────────────────────────────────────────────────────────────
      Page & Shell surface
      ────────────────────────────────────────────────────────────────────────────
    -->
    <Style TargetType="Application">
        <Setter Property="UserAppTheme" Value="Unspecified" />
        <!-- Let device theme drive light/dark -->
    </Style>

    <Style TargetType="ContentPage">
        <Setter Property="BackgroundColor" Value="{DynamicResource M3.Surface}" />
        <Setter Property="Padding" Value="16,16" />
    </Style>

    <!-- Shell colors (tabs/top app bar) -->
    <Color x:Key="Shell.BackgroundColor" Color="{DynamicResource M3.Surface}" />
    <Color x:Key="Shell.ForegroundColor" Color="{DynamicResource M3.OnSurface}" />
    <Color x:Key="Shell.TitleColor" Color="{DynamicResource M3.OnSurface}" />
    <Color x:Key="Shell.DisabledColor" Color="{DynamicResource M3.Outline}" />
    <Color x:Key="Shell.UnselectedColor" Color="{DynamicResource M3.OnSurfaceVariant}" />
    <Color x:Key="Shell.NavBarBackgroundColor" Color="{DynamicResource M3.Surface}" />
    <Color x:Key="Shell.NavBarForegroundColor" Color="{DynamicResource M3.OnSurface}" />
    <Color x:Key="Shell.TabBarBackgroundColor" Color="{DynamicResource M3.Surface}" />
    <Color x:Key="Shell.TabBarForegroundColor" Color="{DynamicResource M3.OnSurface}" />
    <Color x:Key="Shell.TabBarTitleColor" Color="{DynamicResource M3.OnSurface}" />
    <Color x:Key="Shell.TabBarUnselectedColor" Color="{DynamicResource M3.OnSurfaceVariant}" />

    <!--
      ────────────────────────────────────────────────────────────────────────────
      Text & basic content
      ────────────────────────────────────────────────────────────────────────────
    -->
    <Style TargetType="Label">
        <Setter Property="TextColor" Value="{DynamicResource M3.OnSurface}" />
        <Setter Property="FontFamily" Value="{StaticResource M3.Font.Sans}" />
        <Setter Property="FontSize" Value="{StaticResource M3.FontSize.Body}" />
        <Setter Property="LineBreakMode" Value="TailTruncation" />
    </Style>

    <Style TargetType="Span">
        <Setter Property="ForegroundColor" Value="{DynamicResource M3.OnSurface}" />
    </Style>

    <!--
      ────────────────────────────────────────────────────────────────────────────
      Buttons (Filled, Tonal, Outlined, Text)
      ────────────────────────────────────────────────────────────────────────────
    -->
    <!-- Base button -->
    <Style TargetType="Button">
        <Setter Property="CornerRadius" Value="{StaticResource M3.Radius.Full}" />
        <Setter Property="Padding" Value="{StaticResource M3.Padding.Button}" />
        <Setter Property="HeightRequest" Value="44" />
        <Setter Property="FontFamily" Value="{StaticResource M3.Font.Sans}" />
        <Setter Property="FontSize" Value="{StaticResource M3.FontSize.Body}" />
        <Setter Property="TextColor" Value="{DynamicResource M3.OnPrimary}" />
        <Setter Property="BackgroundColor" Value="{DynamicResource M3.Primary}" />
        <Setter Property="BorderColor" Value="Transparent" />
        <Setter Property="BorderWidth" Value="0" />
        <Setter Property="Shadow">
            <Setter.Value>
                <Shadow Brush="{DynamicResource M3.OnSurface}" Opacity="0.15" Offset="0,2" Radius="6"/>
            </Setter.Value>
        </Setter>
        <Setter Property="VisualStateManager.VisualStateGroups">
            <Setter.Value>
                <VisualStateGroupList>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal" />
                        <VisualState x:Name="Pressed">
                            <VisualState.Setters>
                                <Setter Property="BackgroundColor" Value="{DynamicResource M3.PrimaryContainer}" />
                                <Setter TargetName="Content" Property="Label.TextColor" Value="{DynamicResource M3.OnPrimaryContainer}" />
                                <Setter Property="Scale" Value="0.98"/>
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                            <VisualState.Setters>
                                <Setter Property="Opacity" Value="0.38" />
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateGroupList>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Tonal button (secondary emphasis) -->
    <Style x:Key="Button.Tonal" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="BackgroundColor" Value="{DynamicResource M3.SecondaryContainer}" />
        <Setter Property="TextColor" Value="{DynamicResource M3.OnSecondaryContainer}" />
    </Style>

    <!-- Outlined button -->
    <Style x:Key="Button.Outlined" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="TextColor" Value="{DynamicResource M3.Primary}" />
        <Setter Property="BorderColor" Value="{DynamicResource M3.Outline}" />
        <Setter Property="BorderWidth" Value="1" />
        <Setter Property="Shadow">
            <Setter.Value>
                <Shadow Opacity="0"/>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Text button -->
    <Style x:Key="Button.Text" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="TextColor" Value="{DynamicResource M3.Primary}" />
        <Setter Property="Shadow">
            <Setter.Value>
                <Shadow Opacity="0"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Padding" Value="8,6" />
    </Style>

    <!--
      ────────────────────────────────────────────────────────────────────────────
      Inputs: Entry / Editor / Picker / SearchBar (Outlined text fields)
      ────────────────────────────────────────────────────────────────────────────
    -->
    <Style TargetType="Entry">
        <Setter Property="TextColor" Value="{DynamicResource M3.OnSurface}" />
        <Setter Property="PlaceholderColor" Value="{DynamicResource M3.OnSurfaceVariant}" />
        <Setter Property="BackgroundColor" Value="{DynamicResource M3.Surface}" />
        <Setter Property="FontFamily" Value="{StaticResource M3.Font.Sans}" />
        <Setter Property="FontSize" Value="{StaticResource M3.FontSize.Body}" />
        <Setter Property="HeightRequest" Value="48" />
        <Setter Property="Margin" Value="0,8,0,0" />
        <Setter Property="Padding" Value="{StaticResource M3.Padding.TextField}" />
        <Setter Property="BorderColor" Value="{DynamicResource M3.Outline}" />
        <Setter Property="CursorPosition" Value="0"/>
        <Setter Property="ClearButtonVisibility" Value="WhileEditing"/>
        <Setter Property="VisualStateManager.VisualStateGroups">
            <Setter.Value>
                <VisualStateGroupList>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal" />
                        <VisualState x:Name="Focused">
                            <VisualState.Setters>
                                <Setter Property="BorderColor" Value="{DynamicResource M3.Primary}" />
                                <Setter Property="BackgroundColor" Value="{DynamicResource M3.SurfaceContainer.Low}" />
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                            <VisualState.Setters>
                                <Setter Property="Opacity" Value="0.38"/>
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateGroupList>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Editor" BasedOn="{StaticResource {x:Type Entry}}">
        <Setter Property="HeightRequest" Value="120"/>
        <Setter Property="AutoSize" Value="TextChanges"/>
    </Style>

    <Style TargetType="Picker" BasedOn="{StaticResource {x:Type Entry}}">
        <Setter Property="TextColor" Value="{DynamicResource M3.OnSurface}" />
    </Style>

    <Style TargetType="DatePicker" BasedOn="{StaticResource {x:Type Entry}}" />
    <Style TargetType="TimePicker" BasedOn="{StaticResource {x:Type Entry}}" />

    <Style TargetType="SearchBar">
        <Setter Property="TextColor" Value="{DynamicResource M3.OnSurface}" />
        <Setter Property="PlaceholderColor" Value="{DynamicResource M3.OnSurfaceVariant}" />
        <Setter Property="BackgroundColor" Value="{DynamicResource M3.SurfaceContainer.Low}" />
        <Setter Property="FontFamily" Value="{StaticResource M3.Font.Sans}" />
        <Setter Property="HeightRequest" Value="56" />
        <Setter Property="Margin" Value="0,8,0,0" />
        <Setter Property="CancelButtonColor" Value="{DynamicResource M3.Primary}" />
    </Style>

    <!--
      ────────────────────────────────────────────────────────────────────────────
      Selection controls: Switch / CheckBox / RadioButton
      ────────────────────────────────────────────────────────────────────────────
    -->
    <Style TargetType="Switch">
        <Setter Property="OnColor" Value="{DynamicResource M3.Primary}" />
        <Setter Property="ThumbColor" Value="{DynamicResource M3.OnPrimary}" />
        <Setter Property="BackgroundColor" Value="Transparent" />
    </Style>

    <Style TargetType="CheckBox">
        <Setter Property="Color" Value="{DynamicResource M3.Primary}" />
        <Setter Property="BackgroundColor" Value="Transparent" />
    </Style>

    <Style TargetType="RadioButton">
        <Setter Property="TextColor" Value="{DynamicResource M3.OnSurface}" />
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="FontFamily" Value="{StaticResource M3.Font.Sans}" />
    </Style>

    <!--
      ────────────────────────────────────────────────────────────────────────────
      Ranges & feedback
      ────────────────────────────────────────────────────────────────────────────
    -->
    <Style TargetType="Slider">
        <Setter Property="MinimumTrackColor" Value="{DynamicResource M3.Primary}" />
        <Setter Property="MaximumTrackColor" Value="{DynamicResource M3.SurfaceVariant}" />
        <Setter Property="ThumbColor" Value="{DynamicResource M3.Primary}" />
    </Style>

    <Style TargetType="ProgressBar">
        <Setter Property="ProgressColor" Value="{DynamicResource M3.Primary}" />
        <Setter Property="BackgroundColor" Value="{DynamicResource M3.SurfaceVariant}" />
        <Setter Property="HeightRequest" Value="4" />
    </Style>

    <Style TargetType="ActivityIndicator">
        <Setter Property="Color" Value="{DynamicResource M3.Primary}" />
    </Style>

    <Style TargetType="Stepper">
        <Setter Property="BackgroundColor" Value="{DynamicResource M3.SurfaceContainer.Low}" />
    </Style>

    <!--
      ────────────────────────────────────────────────────────────────────────────
      Surfaces & containers
      ────────────────────────────────────────────────────────────────────────────
    -->
    <Style TargetType="Frame">
        <Setter Property="BackgroundColor" Value="{DynamicResource M3.SurfaceContainer.High}" />
        <Setter Property="CornerRadius" Value="{StaticResource M3.Radius.Medium}" />
        <Setter Property="HasShadow" Value="True" />
        <Setter Property="Shadow">
            <Setter.Value>
                <Shadow Brush="{DynamicResource M3.OnSurface}" Opacity="0.10" Offset="0,2" Radius="10"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Padding" Value="16"/>
    </Style>

    <Style TargetType="Border">
        <Setter Property="StrokeShape">
            <Setter.Value>
                <RoundRectangle CornerRadius="{StaticResource M3.Radius.Medium}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Stroke" Value="{DynamicResource M3.OutlineVariant}" />
        <Setter Property="StrokeThickness" Value="1" />
        <Setter Property="Background" Value="{DynamicResource M3.Surface}" />
        <Setter Property="Padding" Value="16"/>
    </Style>

    <!--
      ────────────────────────────────────────────────────────────────────────────
      ImageButton as Floating Action Button (FAB) pattern
      ────────────────────────────────────────────────────────────────────────────
    -->
    <Style x:Key="ImageButton.FAB" TargetType="ImageButton">
        <Setter Property="BackgroundColor" Value="{DynamicResource M3.Primary}" />
        <Setter Property="CornerRadius" Value="{StaticResource M3.Radius.Full}" />
        <Setter Property="Padding" Value="16" />
        <Setter Property="WidthRequest" Value="56" />
        <Setter Property="HeightRequest" Value="56" />
        <Setter Property="Shadow">
            <Setter.Value>
                <Shadow Brush="{DynamicResource M3.OnSurface}" Opacity="0.24" Offset="0,6" Radius="12" />
            </Setter.Value>
        </Setter>
        <Setter Property="TintColor" Value="{DynamicResource M3.OnPrimary}" />
    </Style>

    <!--
      ────────────────────────────────────────────────────────────────────────────
      Alerts
      ────────────────────────────────────────────────────────────────────────────
    -->
    <Style x:Key="Border.Error" TargetType="Border" BasedOn="{StaticResource {x:Type Border}}">
        <Setter Property="Background" Value="{DynamicResource M3.ErrorContainer}" />
        <Setter Property="Stroke" Value="{DynamicResource M3.Error}" />
    </Style>

</ResourceDictionary>
